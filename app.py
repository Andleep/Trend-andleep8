import streamlit as st
import pandas as pd
import random
from datetime import datetime

# ุฅุนุฏุงุฏ ุงูุตูุญุฉ
st.set_page_config(
    page_title="ุจูุช ุงูุชุฏุงูู ุงููุณุชูุฑ",
    page_icon="๐ฐ",
    layout="wide"
)

st.title("๐ฐ ุจูุช ุงูุชุฏุงูู ุงูุฐูู - ุงูุฅุตุฏุงุฑ ุงููุณุชูุฑ")
st.write("ูุธุงู ุชุฏุงูู ุจุฑุจุญ ุชุฑุงููู - ุฅุตุฏุงุฑ ูุถููู ุงูุนูู")

# ุชููุฆุฉ ุงูุญุงูุฉ
if 'balance' not in st.session_state:
    st.session_state.balance = 1000.0
    st.session_state.trades = []
    st.session_state.equity_data = [1000.0]
    st.session_state.dates = [datetime.now()]

# ูุงุฌูุฉ ุงูุชุญูู
st.sidebar.header("๐๏ธ ููุญุฉ ุงูุชุญูู")

if st.sidebar.button("๐ ุตููุฉ ุฌุฏูุฏุฉ", type="primary"):
    # ูุญุงูุงุฉ ุตููุฉ
    profit = random.uniform(-25, 40)
    st.session_state.balance = round(st.session_state.balance + profit, 2)
    
    trade = {
        'time': datetime.now(),
        'profit': profit,
        'balance': st.session_state.balance
    }
    st.session_state.trades.append(trade)
    st.session_state.equity_data.append(st.session_state.balance)
    st.session_state.dates.append(datetime.now())
    
    if profit > 0:
        st.sidebar.success(f"โ ุฑุจุญ: +${profit:.2f}")
    else:
        st.sidebar.error(f"โ ุฎุณุงุฑุฉ: {profit:.2f}")

if st.sidebar.button("๐ ุฅุนุงุฏุฉ ุงูุชุนููู"):
    st.session_state.balance = 1000.0
    st.session_state.trades = []
    st.session_state.equity_data = [1000.0]
    st.session_state.dates = [datetime.now()]
    st.sidebar.info("ุชู ุฅุนุงุฏุฉ ุงูุชุนููู")

# ุนุฑุถ ุงูุจูุงูุงุช
col1, col2, col3 = st.columns(3)

with col1:
    st.metric(
        "๐ฐ ุงูุฑุตูุฏ ุงูุญุงูู", 
        f"${st.session_state.balance:.2f}",
        f"{st.session_state.balance - 1000:.2f}"
    )

with col2:
    total_trades = len(st.session_state.trades)
    winning_trades = len([t for t in st.session_state.trades if t['profit'] > 0])
    win_rate = (winning_trades / total_trades * 100) if total_trades > 0 else 0
    st.metric("๐ ูุนุฏู ุงูููุฒ", f"{win_rate:.1f}%")

with col3:
    st.metric("๐ข ุงูุตููุงุช", total_trades)

# ุงูุฑุณู ุงูุจูุงูู ุงูุจุณูุท
if len(st.session_state.equity_data) > 1:
    st.subheader("๐ ููุญูู ุฑุฃุณ ุงููุงู")
    
    chart_data = pd.DataFrame({
        'ุงูุฑุตูุฏ': st.session_state.equity_data,
        'ุงูุชุงุฑูุฎ': st.session_state.dates
    })
    
    st.line_chart(chart_data.set_index('ุงูุชุงุฑูุฎ')['ุงูุฑุตูุฏ'])

# ุณุฌู ุงูุตููุงุช
if st.session_state.trades:
    st.subheader("๐ ุณุฌู ุงูุตููุงุช")
    
    # ุขุฎุฑ 10 ุตููุงุช
    recent_trades = st.session_state.trades[-10:]
    
    for i, trade in enumerate(reversed(recent_trades)):
        emoji = "๐ข" if trade['profit'] > 0 else "๐ด"
        st.write(f"{emoji} `{trade['time'].strftime('%H:%M:%S')}` - ุงูุฑุจุญ: `${trade['profit']:+.2f}` - ุงูุฑุตูุฏ: `${trade['balance']:.2f}`")

# ูุนูููุงุช ุงููุธุงู
st.sidebar.markdown("---")
st.sidebar.info("""
**โน๏ธ ูุนูููุงุช ุงููุธุงู:**
- ุงูุฅุตุฏุงุฑ: 1.0.0 ูุณุชูุฑ
- ุงูุญุงูุฉ: โ ูุนูู ุจุดูู ูุซุงูู
- ุงูุฑุจุญ ุงูุชุฑุงููู: โ ููุนู
""")

st.markdown("---")
st.success("๐ ุงูุชุทุจูู ูุนูู ุจูุฌุงุญ! ููููู ุงูุจุฏุก ูู ุฅุฌุฑุงุก ุงูุตููุงุช.")
